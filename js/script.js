"use strict";
// Домашка № 1: Основы синтаксиса  ;
console.log(`Я учу JS`);
//Выявить где допущены оибки:

/* Вариант 1
    console.log(`Учим JS`)  
    Ошибки нет, но желательно ставить точку с запятой в конце инструкции;
*/

/* Вариант 2
    console.log(`JS`) 
    console.log(`Учим`)  
    Ошибки нет, но желательно ставить точку с запятой в конце инструкции;
*/

/* Вариант 3
    console.log(`Учим`) console.log(`JS`)
    Ошибка! Если инструкции записываются строкой, 
    тогда наличие разделяющей их точки с запятой ОБЯЗАТЕЛЬНО ;
*/

/* Вариант 4
    console.log(`Учим);
    console.log(`JS`)
    Ошибка! Отсутствует закрывающая ковычка (25 строка);
*/

// Домашка № 2: Переменные  ;
// 1) придумать имя переменной для хранения цвета глаз пользователей сайта;

let userEyesColor;

/*2) объяви две переменных user и userName. 
Присвой значение "Вася" переменной userName. 
Скопируй значение переменной userName в переменную user.
Выведи в консоль переменную user.
Результат должен быть "Вася".
*/
let user;
let userName;
userName = `Вася`;
user = userName;
console.log(user);

// Выявить где допущены оибки:

/*Вариант 1
let user = `Вася` let age = 36;
Ошибка! Если обявляются переменные в одну строку, 
они должны содержать разделяющую их запятую.
А также, повторное упоминание let не нужно.
*/

/*Вариант 2
let myage = 36;
Ошибка! Присваивая имя переменной 
нужно использовать правило camelCase.
Верная запись let myAge = 36;
*/

/*Вариант 3
const BLOCK_SIZE = 14 + 50;
Ошибка! Переменная, 
чье значение будет выявленно в ходе вычисления,
должна записываться с использованием общих 
правил и camelCase. 
*/

/*Вариант 4
const BLOCK_HEIGHT = 100;
Верно! Переменная, 
чье значение известно заранее и четко задано
записывается по правилу всех букв в вверхнем регистре.
(однако, это правило не является обязательным)
*/

/*Вариант 5
if(true){
    var size = 15;
}
console.log(size);
Верно. Так как переменная var обладает особенностью быть видимой за пределами функции. 
Переменные let и const такого свойства не имеют.
*/

// Домашка № 3: Типы данных  ;

//Выявить где допущены оибки:

/* Вариант 1
    let userAge = 36;
    let userInfo = "Фрилансер ${userAge}";
    Ошибки нет, но желательно использовать обратные ковычки;
*/

/* Вариант 2
    let userHeight = 145 / 0;
    (вернется значение Nan)
    console.log(userHeight);
    Ошибка! Вернется значение ifinity, тип данных будет number;
*/

/* Вариант 3
    let userName;
    (вернется тип данных null)
    console.log(typeof userName);
    Ошибка! Вернется тип данных undefined,
    так как переменная объявленна, но еще неизвестно её значение.
    В типе данных null содержится информация о том, 
    что такого файла(данных) нет;
*/

/* Вариант 4
    let userSize = "45" / "8";
    (вернется тип данных number)
    console.log(typeof userSize);
    Верно! При логическом преобразовании данных
    строки могут возвращаться в цифры
    (при условии деления);
*/